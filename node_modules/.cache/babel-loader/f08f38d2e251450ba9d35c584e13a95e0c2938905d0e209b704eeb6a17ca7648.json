{"ast":null,"code":"import apiConfig from './constants.js';\nclass Api {\n  constructor({\n    url,\n    headers\n  }) {\n    this._url = url;\n    this._headers = headers;\n  }\n  _getRequest(url, options) {\n    return fetch(url, options).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error('Что-то пошло не так');\n    });\n  }\n  getAllCards() {\n    return this._getRequest(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    });\n  }\n  createCard(data) {\n    return this._getRequest(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    });\n  }\n  deleteCard(data) {\n    return this._getRequest(`${this._url}/cards/${data}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  getNewAvatar(item) {\n    return this._getRequest(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: item['avatar']\n      })\n    });\n  }\n  setlikeApi(data) {\n    return this._getRequest(`${this._url}/cards/${data}/likes `, {\n      method: 'PUT',\n      headers: this._headers\n    });\n  }\n  removeLikeApi(data) {\n    return this._getRequest(`${this._url}/cards/${data}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  setUserInfo(data) {\n    return this._getRequest(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n  }\n  getUserInfo() {\n    return this._getRequest(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    });\n  }\n}\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"names":["apiConfig","Api","constructor","url","headers","_url","_headers","_getRequest","options","fetch","then","res","ok","json","Error","getAllCards","method","createCard","data","body","JSON","stringify","name","link","deleteCard","getNewAvatar","item","avatar","setlikeApi","removeLikeApi","setUserInfo","about","getUserInfo","api"],"sources":["/Users/evelina/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import apiConfig from './constants.js';\n\nclass Api {\n    constructor({ url, headers }) {\n        this._url = url;\n        this._headers = headers;\n    }\n\n    _getRequest(url, options) {\n        return fetch(url, options)\n            .then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n\n                throw new Error('Что-то пошло не так')\n            })\n    }\n\n    getAllCards() {\n        return this._getRequest(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n    };\n\n    createCard(data) {\n        return this._getRequest(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n    }\n\n    deleteCard(data) {\n        return this._getRequest(`${this._url}/cards/${data}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n\n            })\n    }\n\n    getNewAvatar(item) {\n        return this._getRequest(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: item['avatar'],\n            }),\n        }\n        )\n    }\n\n    setlikeApi(data) {\n        return this._getRequest(`${this._url}/cards/${data}/likes `,\n            {\n                method: 'PUT',\n                headers: this._headers\n\n            })\n    }\n\n    removeLikeApi(data) {\n        return this._getRequest(`${this._url}/cards/${data}/likes`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n\n            })\n    }\n\n    setUserInfo(data) {\n        return this._getRequest(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            }),\n        }\n        )\n    }\n\n    getUserInfo() {\n        return this._getRequest(`${this._url}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n\n    }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}